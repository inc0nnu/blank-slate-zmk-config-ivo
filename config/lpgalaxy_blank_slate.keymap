/*
 * Copyright (c) 2022 Pete Johanson
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/mouse.h>

// layers
#define DEF 0
#define NUM 1
#define NAV 2
#define TRI 3
#define CONF 4
#define MOU 5

#define XXX &none
#define ___ &trans

// Home row mods macro
#define HRML(k1,k2,k3,k4,k5) &ht LSHIFT k1 &ht LGUI k2 &ht LALT k3 &ht LCTRL k4 &ht LC(LS(LALT)) k5
#define HRMR(k1,k2,k3,k4,k5) &ht RC(RS(RALT)) k1 &ht RCTRL k2  &ht LALT k3 &ht RGUI k4 &ht RSHIFT k5

// Bluetooth
#define BT_SEL_ROW &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3
#define BT_SEL_CLR &bt BT_CLR

#define COMBO(NAME, BINDINGS, KEYPOS) \
  combo_##NAME { \
    timeout-ms = <50>; \
    bindings = <BINDINGS>; \
    key-positions = <KEYPOS>; \
    layers = <DEF>; \
  };

&caps_word {
    continue-list = <UNDERSCORE MINUS BSPC DOT>;
};


/ {
    behaviors {
        ht: hold_tap  {
            label = "hold_tap";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <170>;
            quick-tap-ms = <150>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };
    };
   conditional_layers {
       compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <NUM NAV>;
            then-layer = <TRI>;
        };

    };
 
 combos {
  compatible = "zmk,combos";
  
  COMBO(conflayer, &to CONF, 0 11)
  COMBO(capsword, &caps_word, 17 18)
  COMBO(ctrlspce, &kp LC(SPACE), 14 15 16)
};
    // Q en BKSP om op CONF layer te komen
    combos  {
        compatible = "zmk,combos";
        combo_settings  {
            timeout-ms = <150>;
            key-positions = <0 11>;
            bindings = <&to CONF>;
            };
        };
    // G en H voor CAPS WORD
    combos  {
        compatible = "zmk,combos";
        combo_settings  {
            timeout-ms = <50>;
            key-positions = <17 18>;
            bindings = <&caps_word>;
            };
        };
    // S, D en F voor CTRL+SPACE
    combos  {
        compatible = "zmk,combos";
        combo_settings  {
            timeout-ms = <50>;
            key-positions = <14 15 16>;
            bindings = <&kp LC(SPACE)>;
            };
        };

    macros  {
        smile: smile    {
            label = "ZM_smile";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp COLON &kp MINUS &kp RPAR>;
            };
        sad: sad    {
            label = "ZM_sad";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp COLON &kp MINUS &kp LPAR>;
            };
        };

    keymap  {
        compatible = "zmk,keymap";
        base_layer  {
            bindings = <
                &kp ESC   &kp Q    &kp W    &kp E      &kp R  &kp T     &kp Y &kp U &kp I     &kp O   &kp P     &kp BSPC
                &kp TAB   HRML(A,    S,      D,       F,       G)      HRMR(H,    J,    K,        L,     SEMI) &kp ENTER
                XXX   &kp Z    &kp X    &kp C      &kp V  &kp B     &kp N &kp M &kp COMMA &kp DOT &kp FSLH  &kp DEL
                &kp DEL XXX XXX XXX &mo NUM &kp SPACE &kp RSHIFT &mo NAV XXX   XXX   XXX   XXX
                >;
            };
        num_layer {
            bindings = < 
                ___ &kp EXCL  &kp AT  &kp HASH &kp QMARK  &kp PERCENT &kp AMPS  &kp SQT  &kp LPAR &kp RPAR &kp CARET    ___
                ___ HRML(N1,      N2,     N3,      N4,       N5)   HRMR(N6,        N7,       N8,       N9,      N0)  ___
                XXX   &kp BSLH &kp TILDE &kp PIPE  &kp MINUS &kp PLUS  &kp STAR    &kp EQUAL &kp COMMA &kp DOT  &kp FSLH &kp DEL
                XXX   XXX      XXX       XXX       ___   ___  ___   ___   XXX  XXX   XXX  &kp SPACE
                >;
            };
         nav_layer {
            bindings = <
   	 	        XXX  &kp F1   &kp F2  &kp F3 &kp F4 &kp F5       &kp LA(LEFT) &kp UP   &kp LA(RIGHT) &kp PAGE_UP   &kp LC(BSPC)
   	            &caps_word &kp LSHIFT &kp LGUI &kp LALT &kp LCTRL &kp LC(LS(LALT)) &kp LC(LEFT) &kp LEFT     &kp DOWN &kp RIGHT     &kp LC(RIGHT) &kp LA(ENTER) 
   	            XXX &kp F6 &kp F7 &kp F8 &kp F9 &kp F10 &none  &kp HOME      &none    &kp END        &kp PAGE_DOWN         &kp LC(DEL)
                &kp DEL XXX    XXX  XXX    ___   ___   ___   ___   XXX   XXX   XXX   XXX
                >;
            };
        tri_layer {
            bindings = < 
                &kp ESC &kp EXCL  &kp AT  &kp HASH &kp QMARK  &kp PERCENT &kp AMPS  &kp DQT  &kp LBKT &kp RBKT &kp CARET  &kp BSPC
                &kp TAB HRML(N1,      N2,     N3,      N4,       N5)   HRMR(N6,        N7,       N8,       N9,      N0)  &kp ENTER
                XXX &kp BSLH &kp LBRC &kp RBRC  &kp UNDER &kp PLUS  &kp STAR    &kp EQUAL &sad &smile  &kp FSLH &kp DEL
                XXX   XXX   XXX   XXX   ___   ___   ___   ___   XXX   XXX   XXX   XXX
                >;
            };
    	config_layer {
            bindings = <
                &to DEF  XXX   XXX   XXX   XXX     XXX     XXX     XXX     XXX   XXX   XXX         XXX
                XXX      BT_SEL_ROW                XXX     XXX     XXX     XXX   XXX   BT_SEL_CLR  XXX
                XXX      XXX   XXX   XXX   XXX     XXX     XXX     XXX     XXX   XXX   XXX         XXX
                XXX      XXX   XXX   XXX   &kp B   &kp B   &kp B   &kp B   XXX   XXX   XXX         XXX
                >;
            };
    };
};