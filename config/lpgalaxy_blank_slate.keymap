/*
 * Copyright (c) 2022 Pete Johanson
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/mouse.h>

// layers
#define BASE_L 0
#define NUM_L 1
#define SYM_L 2
#define NAV_L 3
#define CONF_L 4

// Home row mods macro
#define HRML(k1,k2,k3,k4,k5) &ht LCTRL k1 &ht LGUI k2 &ht LALT k3 &ht LSHIFT k4 &ht LC(LS(LALT)) k5
#define HRMR(k1,k2,k3,k4,k5) &ht RC(RS(RALT)) k1 &ht RSHIFT k2  &ht LALT k3 &ht RGUI k4 &ht RCTRL k5

// Bluetooth
#define BT(n) BT_SEL n

// Layer keys
#define MO_TO(layer) &mo_to layer layer

&caps_word {
    continue-list = <UNDERSCORE MINUS>;
};

&sk {
    release-after-ms = <3000>;
    quick-release;
};

/ {
    behaviors {
        mo_to: behavior_mo_to {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <220>;
            bindings = <&mo>, <&to>;
        };
        shft_n_sym: shift_and_sym {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <180>;
            bindings = <&hs SYM_L LSHIFT>, <&caps_word>;
        };
        ht: hold_tap  {
            label = "hold_tap";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };
        hs: hold_sticky {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <220>;
            bindings = <&mo>, <&sk>;
        };
    };

    // Q en BKSP om op CONF layer te komen
    combos  {
        compatible = "zmk,combos";
        combo_settings  {
            timeout-ms = <150>;
            key-positions = <0 11>;
            bindings = <&to CONF_L>;
            };
        };

    macros  {
        smile: smile    {
            label = "ZM_smile";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp COLON &kp MINUS &kp RPAR>;
            };
        };

    keymap  {
        compatible = "zmk,keymap";
        base_layer  {
            bindings = <
                &kp ESC   &kp Q    &kp W    &kp E      &kp R  &kp T     &kp Y &kp U &kp I     &kp O   &kp P     &kp BSPC
                &kp TAB   HRML(A,    S,      D,       F,       G)      HRMR(H,    J,    K,        L,     SEMI) &kp ENTER
                &none   &kp Z    &kp X    &kp C      &kp V  &kp B     &kp N &kp M &kp COMMA &kp DOT &kp FSLH  &kp DEL
                &kp DEL &none &none &none MO_TO(1) &kp SPACE &hs 2 LSHIFT MO_TO(3) &none     &none   &none     &none
                >;
            };
        num_layer {
            bindings = < 
                &kp ESC &kp EXCL  &kp AT  &kp HASH &kp QMARK  &kp PERCENT &kp AMPS  &kp SQT  &kp DQT &kp DOLLAR &kp CARET    &kp BSPC
                &kp TAB HRML(N1,      N2,     N3,      N4,       N5)   HRMR(N6,        N7,       N8,       N9,      N0)  &kp ENTER
                &none   &kp BSLH &kp TILDE &kp PIPE  &ht UNDER MINUS &kp PLUS  &kp STAR    &kp EQUAL &kp COMMA &kp DOT  &kp FSLH &kp DEL
                &none &none &none &none &mo_to 1 0	 &kp SPACE &mo 2   MO_TO(3)    &none    &none    &none &kp SPACE
                >;
            };
         symbol_layer {
            bindings = <
   	 	        &none &kp F1   &kp F2  &kp F3 &kp F4 &kp F5       &none &none  &none  &none  &none &kp BSPC 
   	            &caps_word &none &none &kp LBKT &kp LPAR &kp LBRC &kp RBRC  &kp RPAR &kp RBKT &none &none &kp ENTER 
   	            &none &kp F6 &kp F7 &kp F8 &kp F9 &kp F10 &kp F11  &kp F12 &none  &smile  &none  &kp DEL
                &kp DEL &none &none &none   &none   &kp SPACE   &mo 2 &none &none &none &none &none 
                >;
            };
        nav_layer {
            bindings = <
       	        &none &none     &none   &mkp RCLK  &mkp LCLK     &none          &none        &kp LA(LEFT) &kp UP   &kp LA(RIGHT) &kp PAGE_UP   &kp LC(BSPC)
                &none &kp LCTRL &kp LGUI &kp LALT &kp LSHIFT &kp LC(LS(LALT)) &kp LC(LEFT) &kp LEFT     &kp DOWN &kp RIGHT     &kp LC(RIGHT) &kp LA(ENTER) 
                &none &none    &none  &none  &none      &none      &none  &kp HOME      &none    &kp END        &kp PAGE_DOWN         &kp LC(DEL)
                &kp DEL &none      &none    &none    MO_TO(1) &kp SPACE       &mo 2        &mo_to 3 0    &none    &none         &none         &kp SPACE
                >;
            };
    	config_layer {
            bindings = <
                &to 0 &none &none &none &none &none   &none  &none &none &none &none &none 
                &none &bt BT(0) &bt BT(1) &bt BT(2) &bt BT(3) &bt BT(4)    &none   &none &none &none &bt BT_CLR &none 
                &none &none &none &none &none &none         &none        &none &none &none &none &none 
                &none &none &none &none &kp B &kp B         &kp B        &kp B &none &none &none &none 
                >;
            };
    };
};